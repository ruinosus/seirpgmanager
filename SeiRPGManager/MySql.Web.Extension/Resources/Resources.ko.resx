<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Security_DbFailure" xml:space="preserve">
    <value>데이터베이스 작업을 실패 했습니다.</value>
    <comment>Database operation failed.</comment>
  </data>
  <data name="Security_FailedToFindUserTable" xml:space="preserve">
    <value>"{0}" 이름의 사용자 테이블이 없습니다.</value>
    <comment>No user table found that has the name "{0}".</comment>
  </data>
  <data name="Security_InitializeAlreadyCalled" xml:space="preserve">
    <value>"MySqlWebSecurity.InitializeDatabaseConnection" 메서드는 한번만 호출될 수 있습니다.</value>
    <comment>The "MySqlWebSecurity.InitializeDatabaseConnection" method can be called only once.</comment>
  </data>
  <data name="Security_InitializeMustBeAssignContext" xml:space="preserve">
    <value>AppConfig에 "mySqlSecurityInheritedContextType" 값을 설정해야 합니다.</value>
    <comment>You must set the "mySqlSecurityInheritedContextType" in AppConfig.</comment>
  </data>
  <data name="Security_InitializeMustBeCalledFirst" xml:space="preserve">
    <value>"MySqlWebSecurity" 클래스의 메서드를 사용하기 전에 "MySqlWebSecurity.InitializeDatabaseConnection" 메서드를 호출해야 합니다. 사이트 루트에 있는 Global.asax나 _AppStart.cshtml 파일에서 호출해야 합니다.</value>
    <comment>You must call the "MySqlWebSecurity.InitializeDatabaseConnection" method before you call any other method of the "MySqlWebSecurity" class. This call should be placed in an Global.asax or _AppStart.cshtml file in the root of your site.</comment>
  </data>
  <data name="Security_NoAccountFound" xml:space="preserve">
    <value>"{0}" 계정이 존재하지 않습니다.</value>
    <comment>No account exists for "{0}".</comment>
  </data>
  <data name="Security_NoExtendedMembershipProvider" xml:space="preserve">
    <value>이 메서드를 호출하려면 "Membership.Provider" 속성이 "ExtendedMembershipProvider"의 인스턴스가 있어야 합니다..</value>
    <comment>To call this method, the "Membership.Provider" property must be an instance of "ExtendedMembershipProvider".</comment>
  </data>
  <data name="Security_NoUserFound" xml:space="preserve">
    <value>"{0}" 이름을 갖는 사용자를 발견하지 못했습니다.</value>
    <comment>No user found was found that has the name "{0}".</comment>
  </data>
  <data name="SimpleMembership_FailToStoreOAuthToken" xml:space="preserve">
    <value>데이터베이스에 OAuth 토큰을 저장하지 못했습니다.</value>
    <comment>Failed to store OAuth token to database.</comment>
  </data>
  <data name="SimpleMembership_PasswordTooLong" xml:space="preserve">
    <value>멤버쉽 암호가 너무 깁니다. (최대 128자).</value>
    <comment>The membership password is too long. (Maximum length is 128 characters).</comment>
  </data>
  <data name="SimpleMembership_ProviderUnrecognizedAttribute" xml:space="preserve">
    <value>공급자에서 인식할 수 없는 특성: "{0}".</value>
    <comment>Provider unrecognized attribute: "{0}".</comment>
  </data>
  <data name="SimpleRoleProvder_RolePopulated" xml:space="preserve">
    <value>사용자들이 "{0}" 역할에 존재해서 삭제할 수 없습니다.</value>
    <comment>The role "{0}" cannot be deleted because there are still users in the role.</comment>
  </data>
  <data name="SimpleRoleProvder_UserAlreadyInRole" xml:space="preserve">
    <value>이미 "{0}" 사용자는 "{1}" 역할에 있습니다.</value>
    <comment>User "{0}" is already in role "{1}".</comment>
  </data>
  <data name="SimpleRoleProvder_UserNotInRole" xml:space="preserve">
    <value>"{0}" 사용자는 "{1}" 역할에 없습니다.</value>
    <comment>User "{0}" is not in role "{1}".</comment>
  </data>
  <data name="SimpleRoleProvider_NoRoleFound" xml:space="preserve">
    <value>"{0}" 이름의 역할이 없습니다.</value>
    <comment>No role found that has the name "{0}".</comment>
  </data>
  <data name="SimpleRoleProvider_RoleExists" xml:space="preserve">
    <value>"{0}" 역할이 이미 있습니다.</value>
    <comment>Role "{0}" already exists.</comment>
  </data>
</root>